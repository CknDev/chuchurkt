// Generated by LispyScript v1.0.0
var display = function(value) {
    return console.log(value);
};
var warn = function(value) {
    return console.warn(value);
};
var round = function(value) {
    return parseInt(value,10);
};
var list = function(...args) {
    return [
        ...args
    ];
};
var car = function(list) {
    return list[0];
};
var listen = function(name,fn) {
    return document.addEventListener(name,function(e) {
        return fn(e);
    });
};
var cdr = function(list) {
    return list.slice(1);
};
var $ = function(element) {
    return document.querySelector(element);
};
var ctx = function(canvas) {
    return canvas.getContext("2d");
};
var centerize = function(position,size) {
    var x = car(position);
    var y = car(cdr(position));
    var w = car(size);
    var h = car(cdr(size));
    return list(round((x + (w / 2))),round((y + (h / 2))));
};
var write = function(text,position,ctx) {
    ctx.font = "12px Verdana";
    var padd = (12 / 3);
    var x = (car(position) - padd);
    var y = (car(cdr(position)) + padd);
    return ctx.fillText(text,x,y);
};
var rect = function(position,size,ctx) {
    ctx.beginPath();
    return ctx.rect(car(position),car(cdr(position)),car(size),car(cdr(size)));
};
var stroke = function(ctx) {
    return ctx.stroke();
};
var background = function(color,ctx) {
    ctx.fillStyle = color;
    return ctx.fill();
};
var clr = function(w,h,ctx) {
    return ctx.clearRect(0,0,w,h);
};
var tilify = function(x,y,xMax,yMax,xTile,yTile,ctx) {
    rect(list(x,y),list(xTile,yTile),ctx);
    stroke(ctx);
    return ((x === xMax) ?
        ((y === yMax) ?
            false :
            tilify(0,(y + yTile),xMax,yMax,xTile,yTile,ctx)) :
        tilify((x + xTile),y,xMax,yMax,xTile,yTile,ctx));
};
var select = function(position,size,ctx) {
    rect(position,size,ctx);
    return background("green",ctx);
};
var moveSelect = function(currentDirection,padd,selectionBlock) {
    var direction = {
        UP: "UP",
        RIGHT: "RIGHT",
        DOWN: "DOWN",
        LEFT: "LEFT"
    };
    var x = car(selectionBlock);
    var y = car(cdr(selectionBlock));
    var xPadd = car(padd);
    var yPadd = car(cdr(padd));
    return ((currentDirection === direction.UP) ?
        list(x,(y - yPadd)) :
        ((currentDirection === direction.RIGHT) ?
            list((x + xPadd),y) :
            ((currentDirection === direction.DOWN) ?
                list(x,(y + yPadd)) :
                ((currentDirection === direction.LEFT) ?
                    list((x - xPadd),y) :
                    undefined))));
};
var domSelectMode = function(currentMode) {
    var el = $(".select-mode");
    el.innerHTML = currentMode;
};
var toggleMode = function(currentMode) {
    var modes = list("navigation","arrow");
    ((currentMode === car(modes)) ?
        domSelectMode(car(cdr(modes))) :
        domSelectMode(car(modes)));
    return ((currentMode === car(modes)) ?
        car(cdr(modes)) :
        ((currentMode === car(cdr(modes))) ?
            car(modes) :
            undefined));
};
var fill = function(iteration,list) {
    return list.fill(iteration);
};
var length = function(list) {
    return list.length;
};
var keyboard = {
    UP: 38,
    RIGHT: 39,
    DOWN: 40,
    LEFT: 37,
    SPACE: 32
};
var selectMode = "navigation";
domSelectMode(selectMode);
var tileInit = function() {
    tileSet = new Image();
    tileSet.src = "./dist/assets/tileset.png";
    return tileSet;
};
var TILE_SIZE = list(25,15);
var WIN_WIDTH = 800;
var WIN_HEIGHT = 600;
var CANVAS_MAIN = $("canvas.main");
var CANVAS_GROUND = $("canvas.ground");
var CANVAS_SELECTION = $("canvas.selection");
var CANVAS_ARROW = $("canvas.arrow");
var block_size = TILE_SIZE;
var main = ctx(CANVAS_MAIN);
var ground = ctx(CANVAS_GROUND);
var selection = ctx(CANVAS_SELECTION);
var arrow = ctx(CANVAS_ARROW);
main.scale(1.0,1.0);
ground.scale(1.0,1.0);
selection.scale(1.0,1.0);
arrow.scale(1.0,1.0);
var spriteSheet = tileInit();
spriteSheet.onload = function() {
    return arrow.drawImage(spriteSheet,50,0,50,50,0,0,25,15);
};
var clearMainCanvas = function() {
    return clr(CANVAS_MAIN.width,CANVAS_MAIN.height,main);
};
var clearSelectionCanvas = function() {
    return clr(CANVAS_SELECTION.width,CANVAS_SELECTION.height,selection);
};
tilify(0,0,WIN_WIDTH,WIN_HEIGHT,car(TILE_SIZE),car(cdr(TILE_SIZE)),ground);
var block_selected = list(0,0);
write("^",centerize(list((4 * car(block_size)),0),block_size),arrow);
display(centerize(list(0,0),block_size));
listen("keyup",function(e) {
    e.preventDefault();
    ((e.keyCode === keyboard.SPACE) ?
        selectMode = toggleMode(selectMode) :
        undefined);
    ((e.keyCode === keyboard.UP) ?
        clearSelectionCanvas(block_selected = moveSelect("UP",block_size,block_selected)) :
        undefined);
    ((e.keyCode === keyboard.RIGHT) ?
        clearSelectionCanvas(block_selected = moveSelect("RIGHT",block_size,block_selected)) :
        undefined);
    ((e.keyCode === keyboard.DOWN) ?
        clearSelectionCanvas(block_selected = moveSelect("DOWN",block_size,block_selected)) :
        undefined);
    return ((e.keyCode === keyboard.LEFT) ?
        clearSelectionCanvas(block_selected = moveSelect("LEFT",block_size,block_selected)) :
        undefined);
});
var x = 0;
var update = setInterval(function() {
    clearMainCanvas();
    x = (x + 15);
    ((x === 800) ?
        clearInterval(update) :
        undefined);
    rect(list(x,0),block_size,main);
    select(block_selected,block_size,selection);
    return background("red",main);
},100);
